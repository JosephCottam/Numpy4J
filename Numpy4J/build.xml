<project name="numpy4j" default="build">
  <property file="system.properties"/> 
  <property name="src" value="./src"/>
  <property name="bin" value="./bin"/>



  <target name="build" description="Main build target" depends="_verify, javac, c"/>
  
  <target name="_verify" description="Verify the configuration information is present.">
    <mkdir dir="${bin}"/>

    <available file="system.properties" property="build.properties.present"/>
    <fail unless="build.properties.present">
      System.properties file not found.\n
      Needs to include java.headers (path), python.headers (path) and python.version (pythonX.X).
    </fail>
  </target>
  
  <target name="javac" description="Build java classes and JNI headers">
    <javac srcdir="." destdir="./bin" includeantruntime="false"/>
    <javah outputFile="${bin}/c/JNIBridge.h" class="np.JNIBridge" classpath="${bin}" />
  </target>


  <target name="c">
    <copy todir="${bin}/c" flatten="true">
      <fileset dir="${src}" includes="**/*.c"/>
    </copy>

    <exec executable="gcc">
      <arg value="-o"/>
      <arg value="${bin}/libJNIbridge.jnilib"/>
      <arg value="-shared"/>
      <arg value="-I${java.path}"/>
      <arg value="-I${python.path}"/>
      <arg value="-l${python.version}"/>
      <arg value="${bin}/c/JNIbridge.c"/>
    </exec>
  </target>
  

  <target name="clean">
    <delete dir="${bin}"/>
    <mkdir dir="${bin}"/>
  </target>

  <target name="exec" description="Simple test.  Usually points to a test of the current feature-under-development." >
    <java classname="np.test.Exec" classpath="${bin}" fork="true">
      <jvmarg value="-Djava.library.path=${bin}"/>
    </java>
  </target>

  <target name="perf" description="Performance tests">
    <java classname="np.test.Performance" classpath="${bin}" fork="true">
      <jvmarg value="-Djava.library.path=${bin}"/>
      <arg line="${args}"/>
    </java>
  </target>
</project>
